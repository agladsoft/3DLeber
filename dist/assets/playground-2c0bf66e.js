import{F as c,P as s,G as o,H as g,I as D,n as A,J as z,K as P,L as x,M}from"./main-96543086.js";import{N as G,O as v}from"./main-96543086.js";function T(a,i){if(!y(a,i))return;const e=x,n=M;c(),O(e,n,a,i)}function y(a,i){return a>=s.minSize&&a<=s.maxSize&&i>=s.minSize&&i<=s.maxSize}function O(a,i,e,n){const l=Date.now(),m=P.duration,t=function(){const p=Date.now()-l,r=Math.min(p/m,1),u=R(r),d=a+(e-a)*u,f=i+(n-i)*u;r<1?(I(d,f),requestAnimationFrame(t)):N(e,n)};t()}function I(a,i){if(o&&o.userData.originalWidth&&o.userData.originalDepth){const e=a/o.userData.originalWidth,n=i/o.userData.originalDepth;o.scale.set(e,1,n)}g(a,i)}function N(a,i){if(D(a,i),A(),c(),window.app&&window.app.isTopViewActive){const e=z(a,i);e&&(e.matrixAutoUpdate=!1,e.updateMatrix())}}function R(a){return a<.5?4*a*a*a:1-Math.pow(-2*a+2,3)/2}export{D as createPlayground,o as ground,G as groundMesh,v as loadPlayground,M as playgroundLength,x as playgroundWidth,T as resizePlaygroundWithAnimation};

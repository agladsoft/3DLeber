/**
 * –ú–æ–¥—É–ª—å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç
 */

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å—Ç–∏–ª–µ–π
function applyNewStyles() {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç <link> –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π
    const styleLink = document.createElement('link');
    styleLink.rel = 'stylesheet';
    styleLink.href = 'css/categories_v2.css';
    styleLink.id = 'categories-v2-styles';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–∂–µ —Å—Ç–∏–ª–∏
    if (!document.getElementById('categories-v2-styles')) {
        document.head.appendChild(styleLink);
    }
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –º–æ–¥–µ–ª–µ–π
const categories = [
    {
        id: 'domiki',
        name: '–î–æ–º–∏–∫–∏',
        models: [
            {
                id: 1,
                article: '–î–¢–ö-1012',
                title: '–ò–≥—Ä–æ–≤–æ–π –∫–æ–º–ø–ª–µ–∫—Å ¬´–ö–∞–¥–º–∏–π¬ª',
                image: 'https://via.placeholder.com/200x200?text=–î–æ–º–∏–∫',
                placement: '–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–ª–æ—â–∞–¥–∫—É: 0 –∏–∑ 2',
                age: '5+ –ª–µ—Ç',
                size: '63.2 –º¬≤'
            },
            {
                id: 2,
                article: '–î–¢–ö-2015',
                title: '–ò–≥—Ä–æ–≤–æ–π –¥–æ–º–∏–∫ ¬´–õ—É–Ω—Ç–∏–∫¬ª',
                image: 'https://via.placeholder.com/200x200?text=–î–æ–º–∏–∫+2',
                placement: '–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–ª–æ—â–∞–¥–∫—É: 0 –∏–∑ 1',
                age: '3+ –ª–µ—Ç',
                size: '42.0 –º¬≤'
            }
        ]
    },
    {
        id: 'kachalki',
        name: '–ö–∞—á–∞–ª–∫–∏',
        models: [
            {
                id: 3,
                article: '–ö–ß–õ-3010',
                title: '–ö–∞—á–∞–ª–∫–∞ –Ω–∞ –ø—Ä—É–∂–∏–Ω–µ ¬´–ö–æ–Ω–µ–∫¬ª',
                image: 'https://via.placeholder.com/200x200?text=–ö–∞—á–∞–ª–∫–∞',
                placement: '–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–ª–æ—â–∞–¥–∫—É: 0 –∏–∑ 3',
                age: '3+ –ª–µ—Ç',
                size: '8.5 –º¬≤'
            }
        ]
    },
    {
        id: 'kompleksy',
        name: '–ö–æ–º–ø–ª–µ–∫—Å—ã',
        models: [
            {
                id: 4,
                article: '–ö–ú–ü-2021',
                title: '–ò–≥—Ä–æ–≤–æ–π –∫–æ–º–ø–ª–µ–∫—Å ¬´–ë–æ–ª—å—à–æ–π¬ª',
                image: 'https://via.placeholder.com/200x200?text=–ö–æ–º–ø–ª–µ–∫—Å',
                placement: '–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–ª–æ—â–∞–¥–∫—É: 0 –∏–∑ 1',
                age: '6+ –ª–µ—Ç',
                size: '120.0 –º¬≤'
            }
        ]
    },    {
        id: 'besedki',
        name: '–ë–µ—Å–µ–¥–∫–∏',
        models: [
            {
                id: 5,
                article: '–ë–°–î-1001',
                title: '–ë–µ—Å–µ–¥–∫–∞ ¬´–û—Ç–¥—ã—Ö¬ª',
                image: 'https://via.placeholder.com/200x200?text=–ë–µ—Å–µ–¥–∫–∞',
                placement: '–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–ª–æ—â–∞–¥–∫—É: 0 –∏–∑ 2',
                age: '–í—Å–µ –≤–æ–∑—Ä–∞—Å—Ç—ã',
                size: '32.0 –º¬≤'
            }
        ]
    },
    {
        id: 'sportkompleksy',
        name: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã',
        models: [
            {
                id: 6,
                article: '–°–ü–ö-5010',
                title: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å ¬´–û–ª–∏–º–ø¬ª',
                image: 'https://via.placeholder.com/200x200?text=–°–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å',
                placement: '–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–ª–æ—â–∞–¥–∫—É: 0 –∏–∑ 1',
                age: '8+ –ª–µ—Ç',
                size: '85.0 –º¬≤'
            }
        ]
    }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–∞–π–¥–±–∞—Ä–∞
function createNewSidebar() {
    console.log('Creating new sidebar...');
    
    // –ù–∞—Ö–æ–¥–∏–º —Å–∞–π–¥–±–∞—Ä
    const sidebar = document.getElementById('sidebar');
    if (!sidebar) {
        console.error('Sidebar not found!');
        return;
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ —Å—Ç–∏–ª–µ–π
    sidebar.classList.add('categories-sidebar');
    
    // –û—á–∏—â–∞–µ–º —Å–∞–π–¥–±–∞—Ä
    sidebar.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–∞–π–¥–±–∞—Ä–∞
    const sidebarHeader = document.createElement('div');
    sidebarHeader.className = 'sidebar-header';
    sidebarHeader.innerHTML = `
        <div class="back-button">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15 6L9 12L15 18" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        </div>
        <h3 class="sidebar-title">–ö–ê–¢–ï–ì–û–†–ò–ò –û–ë–™–ï–ö–¢–û–í</h3>
    `;
    
    // –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å—Ö–ª–æ–ø–Ω—É—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    const verticalTitle = document.createElement('div');
    verticalTitle.className = 'vertical-title';
    verticalTitle.textContent = '–ö–ê–¢–ï–ì–û–†–ò–ò –û–ë–™–ï–ö–¢–û–í';
    
    const categoriesList = document.createElement('div');
    categoriesList.className = 'categories-list';    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories.forEach(category => {
        const categoryElement = document.createElement('div');
        categoryElement.className = 'category';
        categoryElement.dataset.category = category.id;
        
        // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const categoryHeader = document.createElement('div');
        categoryHeader.className = 'category-header';
        categoryHeader.innerHTML = `
            <span class="category-name">${category.name}</span>
            <span class="category-arrow">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9 18L15 12L9 6" stroke="#FF7E3D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            </span>
        `;
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–æ–¥–µ–ª–µ–π
        const modelsContainer = document.createElement('div');
        modelsContainer.className = 'models-container';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–µ–ª–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        category.models.forEach(model => {
            const modelElement = document.createElement('div');
            modelElement.className = 'model';
            modelElement.dataset.modelId = model.id;
            modelElement.setAttribute('draggable', 'true');
            
            modelElement.innerHTML = `
                <div class="model-image">
                    <img src="${model.image}" alt="${model.title}">
                </div>
                <div class="model-article">${model.article}</div>
                <div class="model-title">${model.title}</div>
                <div class="model-placement">${model.placement}</div>
                <div class="model-specs">
                    <div class="model-spec">
                        <span class="model-spec-icon">üë§</span>
                        <span>${model.age}</span>
                    </div>
                    <div class="model-spec">
                        <span class="model-spec-icon">üìè</span>
                        <span>${model.size}</span>
                    </div>
                    <div class="availability-indicator"></div>
                </div>
            `;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ drag-and-drop
            modelElement.addEventListener('dragstart', function(event) {
                event.dataTransfer.setData('model-id', model.id);
                event.dataTransfer.setData('model', `${model.id}.glb`);
                console.log('Drag started for model:', model.id);
            });            
            modelsContainer.appendChild(modelElement);
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categoryElement.appendChild(categoryHeader);
        categoryElement.appendChild(modelsContainer);
        categoriesList.appendChild(categoryElement);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categoryHeader.addEventListener('click', function() {
            // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞, –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ—ë
            if (categoryElement.classList.contains('active')) {
                categoryElement.classList.remove('active');
            } else {
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                categoryElement.classList.add('active');
            }
        });
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–∞–π–¥–±–∞—Ä
    sidebar.appendChild(sidebarHeader);
    sidebar.appendChild(categoriesList);
    sidebar.appendChild(verticalTitle);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ (—Ç–µ–ø–µ—Ä—å —ç—Ç–æ –∫–Ω–æ–ø–∫–∞ —Å—Ö–ª–æ–ø—ã–≤–∞–Ω–∏—è)
    const backButton = sidebarHeader.querySelector('.back-button');
    backButton.addEventListener('click', function() {
        console.log('Toggle sidebar collapse');
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å collapsed –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞
        sidebar.classList.toggle('collapsed');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ localStorage –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
        if (sidebar.classList.contains('collapsed')) {
            localStorage.setItem('sidebar_collapsed', 'true');
        } else {
            localStorage.setItem('sidebar_collapsed', 'false');
        }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    if (localStorage.getItem('sidebar_collapsed') === 'true') {
        sidebar.classList.add('collapsed');
    }
    
    console.log('New sidebar created!');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
document.addEventListener('DOMContentLoaded', function() {
    console.log('Initializing sidebar v2...');
    applyNewStyles();
    createNewSidebar();
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export { applyNewStyles, createNewSidebar };
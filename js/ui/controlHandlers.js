/**
 * –ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 */
import { PLAYGROUND } from '../config.js';
import { 
    resetCameraView, 
    takeScreenshot, 
    toggleTopView 
} from '../scene.js';
import { 
    loadPlayground, 
    resizePlaygroundWithAnimation, 
    playgroundWidth, 
    playgroundLength 
} from '../playground.js';
import { checkAllObjectsPositions } from '../objects.js';
import { showNotification } from '../utils.js';
import { showAllDimensions, hideAllDimensions, addDimensionsToModel } from '../modules/dimensionDisplay/index.js';
import { placedObjects } from '../objects.js';

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
 */
export function initControlHandlers() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (document.readyState === 'loading') {
        document.addEventListener("DOMContentLoaded", setupControlHandlers);
    } else {
        // –ï—Å–ª–∏ DOMContentLoaded —É–∂–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ
        setupControlHandlers();
    }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 */
function setupControlHandlers() {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    setupScreenshotButton();
    setupPlaygroundSizeInputs();
    setupChangePlaygroundButton();
    setupResetViewButton();
    setupTopViewButton();
    setupDimensionsButton();
    setupPlaygroundButton();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
    const deleteAllBtn = document.getElementById('deleteAllModels');
    if (deleteAllBtn) {
        deleteAllBtn.onclick = async function() {
            // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º placedObjects –∏ removeObject
            const module = await import('../objects.js');
            // –ö–æ–ø–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–æ –≤—Ä–µ–º—è –∏—Ç–µ—Ä–∞—Ü–∏–∏
            const objectsToDelete = [...module.placedObjects];
            objectsToDelete.forEach(obj => module.removeObject(obj));
        };
    }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
 */
function setupScreenshotButton() {
    const screenshotButton = document.getElementById("saveScreenshot");
    if (screenshotButton) {
        screenshotButton.addEventListener("click", takeScreenshot);
    }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–ª–æ—â–∞–¥–∫–∏
 */
function setupPlaygroundSizeInputs() {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª—è —Ñ–æ—Ä–º—ã
    const widthInput = document.getElementById("playgroundWidth");
    const lengthInput = document.getElementById("playgroundLength");
    
    if (widthInput) widthInput.value = playgroundWidth.toFixed(2);
    if (lengthInput) lengthInput.value = playgroundLength.toFixed(2);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å —Ç–µ–∫—É—â–∏–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏ –ø–ª–æ—â–∞–¥–∫–∏
    updatePlaygroundStatusText();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–∑–º–µ—Ä–æ–≤
    addSizePreviewHandlers(widthInput, lengthInput);
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–æ—â–∞–¥–∫–∏
 */
function updatePlaygroundStatusText() {
    const statusElement = document.getElementById("playgroundStatus");
    if (statusElement) {
        statusElement.textContent = `–ü–ª–æ—â–∞–¥–∫–∞: ${playgroundWidth.toFixed(2)}–º √ó ${playgroundLength.toFixed(2)}–º`;
    }
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–∑–º–µ—Ä–æ–≤
 * @param {HTMLInputElement} widthInput - –ü–æ–ª–µ –≤–≤–æ–¥–∞ —à–∏—Ä–∏–Ω—ã
 * @param {HTMLInputElement} lengthInput - –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª–∏–Ω—ã
 */
function addSizePreviewHandlers(widthInput, lengthInput) {
    if (widthInput) {
        widthInput.addEventListener("input", (e) => {
            const value = parseFloat(e.target.value) || playgroundWidth;
            const widthLabel = document.getElementById("widthLabel");
            if (widthLabel) widthLabel.textContent = `${value}–º`;
        });
    }
    
    if (lengthInput) {
        lengthInput.addEventListener("input", (e) => {
            const value = parseFloat(e.target.value) || playgroundLength;
            const lengthLabel = document.getElementById("lengthLabel");
            if (lengthLabel) lengthLabel.textContent = `${value}–º`;
        });
    }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–°–º–µ–Ω–∏—Ç—å –ø–ª–æ—â–∞–¥–∫—É"
 */
function setupChangePlaygroundButton() {
    const changePlaygroundButton = document.getElementById("changePlayground");
    if (changePlaygroundButton) {
        changePlaygroundButton.addEventListener("click", async () => {
            try {
                // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–∑ –º–æ–¥—É–ª—è modal.js
                import('../modal.js').then(modalModule => {
                    if (typeof modalModule.showPlatformSelectModal === 'function') {
                        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                        modalModule.showPlatformSelectModal();
                    } else {
                        console.error("–§—É–Ω–∫—Ü–∏—è showPlatformSelectModal –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–æ–¥—É–ª–µ");
                        showNotification("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏", true);
                    }
                }).catch(error => {
                    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è modal.js:", error);
                    showNotification("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏", true);
                });
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:", error);
                showNotification("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø–ª–æ—â–∞–¥–∫–∏", true);
            }
        });
    }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å–±—Ä–æ—Å–∞ –≤–∏–¥–∞
 */
function setupResetViewButton() {
    const resetViewButton = document.getElementById("resetView");
    if (resetViewButton) {
        resetViewButton.addEventListener("click", () => {
            resetCameraView(playgroundWidth, playgroundLength);
        });
    }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É
 */
function setupTopViewButton() {
    // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É
    let topViewButton = document.getElementById("topView");
    if (!topViewButton) {
        console.error("–ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM! –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑...");
        
        // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        setTimeout(() => {
            topViewButton = document.getElementById("topView");
            if (topViewButton) {
                console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º...");
                initializeTopViewButton(topViewButton);
            } else {
                console.error("–ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–∞–∂–µ –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏!");
            }
        }, 500);
    } else {
        console.log("–ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É –Ω–∞–π–¥–µ–Ω–∞, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º...");
        initializeTopViewButton(topViewButton);
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É
 * @param {HTMLElement} button - –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É
 */
function initializeTopViewButton(button) {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç–∏–ª–∏ –∏ –∫–ª–∞—Å—Å—ã
    button.className = ""; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã
    
    button.textContent = "üîù –í–∏–¥ —Å–≤–µ—Ä—Ö—É";
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏
    button.replaceWith(button.cloneNode(true));
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–Ω–æ–≤–æ –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const freshButton = document.getElementById("topView");
    
    freshButton.addEventListener("click", () => {
        console.log("–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É");
        console.log("–¢–µ–∫—É—â–∏–µ —Ä–∞–∑–º–µ—Ä—ã –ø–ª–æ—â–∞–¥–∫–∏:", playgroundWidth, "x", playgroundLength);
        
        try {
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –∏ –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            const isActive = toggleTopView(playgroundWidth, playgroundLength);
            console.log("–ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É:", isActive);
            
            // –§–æ—Ä—Å–∏—Ä—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ DOM
            requestAnimationFrame(() => {
                updateTopViewButtonStyle(freshButton, isActive);
            });
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É:", error);
            showNotification("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É", true);
        }
    });
    
    console.log("–ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ");
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É
 * @param {HTMLElement} button - –ö–Ω–æ–ø–∫–∞
 * @param {Boolean} isActive - –ê–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ä–µ–∂–∏–º –≤–∏–¥ —Å–≤–µ—Ä—Ö—É
 */
function updateTopViewButtonStyle(button, isActive) {
    if (isActive) {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—Ä–∞—Å–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        console.log("–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—Ä–∞—Å–Ω—ã–π —Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏");
        button.textContent = "–í—ã–π—Ç–∏ –∏–∑ –≤–∏–¥–∞ —Å–≤–µ—Ä—Ö—É";
        button.setAttribute("style", activeStyles);
        button.classList.add("active");
    } else {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–µ–ª–µ–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        console.log("–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–µ–ª–µ–Ω—ã–π —Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏");
        button.textContent = "üîù –í–∏–¥ —Å–≤–µ—Ä—Ö—É";
        button.setAttribute("style", inactiveStyles);
        button.classList.remove("active");
    }
    
    console.log("–°—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω:", button.style.backgroundColor);
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ä–∞–∑–º–µ—Ä –≤ –¥–æ–ø—É—Å—Ç–∏–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
 * @param {Number} size - –†–∞–∑–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {Boolean} true, –µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –¥–æ–ø—É—Å—Ç–∏–º
 */
function isValidSize(size) {
    return size >= PLAYGROUND.minSize && size <= PLAYGROUND.maxSize;
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–†–∞–∑–º–µ—Ä—ã"
 */
function setupDimensionsButton() {
    const dimensionsButton = document.getElementById('toggleDimensions');
    if (!dimensionsButton) return;

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if (typeof window.dimensionsVisible === 'undefined') {
        window.dimensionsVisible = false;
    }

    updateDimensionsButtonStyle(dimensionsButton, window.dimensionsVisible);

    dimensionsButton.onclick = async function() {
        window.dimensionsVisible = !window.dimensionsVisible;
        
        if (window.dimensionsVisible) {
            // –î–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–∞ —Å—Ü–µ–Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            if (Array.isArray(placedObjects)) {
                placedObjects.forEach(obj => addDimensionsToModel(obj));
            }
            showAllDimensions();
        } else {
            hideAllDimensions();
        }
        
        updateDimensionsButtonStyle(dimensionsButton, window.dimensionsVisible);
    };
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏ "–†–∞–∑–º–µ—Ä—ã"
 * @param {HTMLElement} button - –ö–Ω–æ–ø–∫–∞
 * @param {Boolean} isActive - –ê–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
 */
function updateDimensionsButtonStyle(button, isActive) {
    if (isActive) {
        button.classList.add('active');
        button.textContent = 'üìè –†–∞–∑–º–µ—Ä—ã ON';
    } else {
        button.classList.remove('active');
        button.textContent = 'üìè –°–∫—Ä—ã—Ç—å —Ä–∞–∑–º–µ—Ä—ã';
    }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–ª–æ—â–∞–¥–∫–∏
 */
function setupPlaygroundButton() {
    const playgroundButton = document.getElementById('playgroundButton');
    const playgroundSettings = document.getElementById('playgroundSettings');
    const colorPicker = document.getElementById('playgroundColorPicker');
    const colorSquares = colorPicker ? colorPicker.querySelectorAll('.color-square') : [];
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞–º–∏
    const widthSlider = document.getElementById('widthSlider');
    const lengthSlider = document.getElementById('lengthSlider');
    const widthValue = document.getElementById('widthValue');
    const lengthValue = document.getElementById('lengthValue');
    const applyButton = document.getElementById('applyPlaygroundSize');
    
    if (!playgroundButton || !playgroundSettings) return;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–ª–æ—â–∞–¥–∫–∏
    window.selectedPlaygroundWidth = window.selectedPlaygroundWidth || 10;
    window.selectedPlaygroundLength = window.selectedPlaygroundLength || 10;
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –ø–æ–ª–∑—É–Ω–∫–æ–≤
    if (widthSlider && widthValue) {
        widthSlider.value = window.selectedPlaygroundWidth;
        widthValue.textContent = window.selectedPlaygroundWidth;
    }
    
    if (lengthSlider && lengthValue) {
        lengthSlider.value = window.selectedPlaygroundLength;
        lengthValue.textContent = window.selectedPlaygroundLength;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç
    updateSelectedColorSquare();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–ª–æ—â–∞–¥–∫–∏
    playgroundButton.onclick = function() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–æ—â–∞–¥–∫–∏
        playgroundSettings.classList.toggle('hidden');
        updateSelectedColorSquare();
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–ª–æ—â–∞–¥–∫–∏
    const applyPlaygroundSize = async (newWidth, newLength) => {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤
        if (window.selectedPlaygroundWidth === newWidth && window.selectedPlaygroundLength === newLength) {
            return; // –†–∞–∑–º–µ—Ä—ã –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã
        window.selectedPlaygroundWidth = newWidth;
        window.selectedPlaygroundLength = newLength;
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ü–≤–µ—Ç
        const currentColor = window.selectedPlaygroundColor || '—Å–µ—Ä—ã–π';
        
        try {
            // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–æ—â–∞–¥–∫–∏
            const playgroundModule = await import('../playground.js');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—É—é –ø–ª–æ—â–∞–¥–∫—É —Å –Ω–æ–≤—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
            await playgroundModule.loadPlayground('basketball_court.glb', newWidth, newLength, currentColor);
            
            console.log(`–†–∞–∑–º–µ—Ä—ã –ø–ª–æ—â–∞–¥–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã: —à–∏—Ä–∏–Ω–∞=${newWidth}–º, –¥–ª–∏–Ω–∞=${newLength}–º`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–ª–æ—â–∞–¥–∫–∏:', error);
        }
    };
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª–∑—É–Ω–∫–æ–≤
    if (widthSlider && widthValue) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø–æ–ª–∑—É–Ω–∫–∞
        widthSlider.oninput = function() {
            widthValue.textContent = this.value;
        };
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä –ø—Ä–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–∏ –ø–æ–ª–∑—É–Ω–∫–∞
        widthSlider.onchange = function() {
            const newWidth = parseInt(this.value);
            const newLength = parseInt(lengthSlider.value);
            applyPlaygroundSize(newWidth, newLength);
        };
    }
    
    if (lengthSlider && lengthValue) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø–æ–ª–∑—É–Ω–∫–∞
        lengthSlider.oninput = function() {
            lengthValue.textContent = this.value;
        };
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä –ø—Ä–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–∏ –ø–æ–ª–∑—É–Ω–∫–∞
        lengthSlider.onchange = function() {
            const newWidth = parseInt(widthSlider.value);
            const newLength = parseInt(this.value);
            applyPlaygroundSize(newWidth, newLength);
        };
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —Ü–≤–µ—Ç–Ω—ã–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏
    colorSquares.forEach(square => {
        square.addEventListener('click', async function() {
            // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç
            const selectedColor = this.getAttribute('data-color');
            
            // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–æ–≤
            colorSquares.forEach(s => s.classList.remove('selected'));
            
            // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç–∏–∫
            this.classList.add('selected');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
            window.selectedPlaygroundColor = selectedColor;
            
            try {
                // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–æ—â–∞–¥–∫–∏
                const playgroundModule = await import('../playground.js');
                
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–∞–∑–º–µ—Ä—ã –ø–ª–æ—â–∞–¥–∫–∏
                const width = window.selectedPlaygroundWidth || 10;
                const length = window.selectedPlaygroundLength || 10;
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—É—é –ø–ª–æ—â–∞–¥–∫—É —Å —Ç–µ–º–∏ –∂–µ —Ä–∞–∑–º–µ—Ä–∞–º–∏, –Ω–æ —Å –Ω–æ–≤—ã–º —Ü–≤–µ—Ç–æ–º
                await playgroundModule.loadPlayground('basketball_court.glb', width, length, selectedColor);
                
                console.log('–¶–≤–µ—Ç –ø–ª–æ—â–∞–¥–∫–∏ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:', selectedColor);
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–≤–µ—Ç–∞ –ø–ª–æ—â–∞–¥–∫–∏:', error);
            }
        });
    });
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ü–≤–µ—Ç–∞
    function updateSelectedColorSquare() {
        const currentColor = window.selectedPlaygroundColor || '—Å–µ—Ä—ã–π';
        colorSquares.forEach(square => {
            square.classList.remove('selected');
            if (square.getAttribute('data-color') === currentColor) {
                square.classList.add('selected');
            }
        });
    }
}

